// Mocks generated by Mockito 5.3.2 from annotations
// in home_challenge_kanban/test/features/timer/data/timer_service/mock/mock_timer_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:home_challenge_kanban/features/timer/data/timer_services/timer_service.dart'
    as _i3;
import 'package:home_challenge_kanban/features/timer/domain/usecases/timer_usecases.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/rxdart.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueStream_0<T> extends _i1.SmartFake
    implements _i2.ValueStream<T> {
  _FakeValueStream_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimerService extends _i1.Mock implements _i3.TimerService {
  @override
  _i4.Future<void> pauseTimer() => (super.noSuchMethod(
        Invocation.method(
          #pauseTimer,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i2.ValueStream<int>> startTimer(_i5.StartTimerParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #startTimer,
          [params],
        ),
        returnValue:
            _i4.Future<_i2.ValueStream<int>>.value(_FakeValueStream_0<int>(
          this,
          Invocation.method(
            #startTimer,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.ValueStream<int>>.value(_FakeValueStream_0<int>(
          this,
          Invocation.method(
            #startTimer,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.ValueStream<int>>);
  @override
  _i4.Future<void> stopTimer() => (super.noSuchMethod(
        Invocation.method(
          #stopTimer,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
